{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Work on SARS Cov2","n":0.5}}},{"i":2,"$":{"0":{"v":"Work_documented","n":1},"1":{"v":"# Objective\n\nIs it possible to predict the positions that are vulnerable for forth coming mutations.\n\n## Steps in the workflow\n\n```mermaid\ngraph TD;\n1[start]--Based on data quantity-->A[Choosing countries for the study]--checking for extreme low value outliers-->B[Downloading sequence and meta data from these countries for 22 months]--Mapping lineages to parental lineage-->C[Finding the difference in the trend of variant frequencies in these countries]\n```\n\n- [[Question on date|Work_documented.possible_questions#1-whyhow-was-this-particular-time-period-jan22-oct23-chosen-while-pandemic-has-been-prevelant-2020-onwards]]\n  \n## Data acquisition\n\n- List of locations available in GISAID was obtained from GISAIDR Git repo - [GISAID_LOCATIONS.txt](https://github.com/Wytamma/GISAIDR/blob/master/GISAID_LOCATIONS.txt)\n- The following points/steps are coded in the file ```Work/Data_Analysis/Monthwise_data_submission.Rmd```\n  - From the GISAID, the total number of **_high_**, **_coverge_** completed sequence deposited by each country (200+) in the past 22 months(Jan2022-Oct2023) were retrieved in a month wise fasion using the R Package GISAIDR. The table is in ```Work/Data_Analysis/country_monthly_submission.csv```\n  - Countries that had more than 10,000 sequences deposited in total in the past 22 months were alone considered further.\n  - This included 10 countries : India, South Korea, Denmark, Germany, Norway, Spain, United Kingdom, Canada, USA, Australia. ```Work/Data_Analysis/chosen_ten_country_submission.csv```\n  - The trend of the time series submission statistics of these countries were plotted. It is present in the file ```Work/Data_Analysis/plots/ten_Country_data_trend_plots.pdf```\n  ![Trends in 10 countries](assets/plots/Country_trend_plots.png)\n  - Outlier detection and pruning of the observation horizon(Time period considered): Extreme low values were searched for, using the [[Hampler Filter|Glossary#hampler-filter]] (one of the [[Outlier Estimation and methods|Glossary#outlier-estimation-and-methods]]). outliers_mad from Routliers package was used . Since there were no extreme low values found in any of the countries, the observation time period was not pruned.\n  - The sequence data for 10 countries were downloaded. There are files with crude data - all data retrieved from GISAID for each of the accesssion ID (29 cols of data) and there are files with essential columns: strain,virus,collection_date,country,pangolineage,sequence, length of the sequence, GISAID accession_id. The crude data for 10 countries are present 10 files in the folder ```Work/Data_Analysis/ten_country_crude_data_seq``` and the essential column files are in the folder ```Work/Data_Analysis/ten_country_ess_data```\n  - The Rmd also has a codeblock for downloading data with AA_substitution. This data was needed for mapping lineages to their parental lineage. For this I used the modified download script(modified by me) ```Work/Data_Analysis/Modified_GISAIDRdownload.R```.\n    > This can be done by ```fix(Download)``` and modifying the script as we need\n  - This mutation data are stored in ```Work/Data_Analysis/ten_country_mut_data```\n  \n> There were some inconsistencies in the Date entries (only year no month or year and month an no date) such entries were removed.\n> On the course of doing this it was identified that the number of entries that was downloaded for each countries do not exactly match the numbers in ```Work/Data_Analysis/chosen_ten_country_submission.csv``` excluding few countries.\n> After removing the inconsistent date entries the numbers(downloaded and number in file) for India match.\n> The inconsistencies are reported in the file ```Work/Data_Analysis/inconsistencies_in_data.numbers```.\n> The number of downloaded entries are more than then numbers in file.\n> After looking into it, it was observed that there were few more entries added to these countries in the time gap(around a week) between the compiling ```Work/Data_Analysis/chosen_ten_country_submission.csv``` and downloading data. [[Work_documented.checking inconsistencies]]\n## Summary\nSummary of the downloaded data\n\n| **Country**                 | **Total number of entries downloaded (Jan22-Oct23)** | **Entries after removing the date inconsistencies** | **Number of unassigned** | **Percentage of unassigned** |\n| --------------------------- | ---------------------------------------------------- | --------------------------------------------------- | ------------------------ | ---------------------------- |\n| **Asia / India**            | 18106                                                | 15783                                               | 0                        | 0 %                          |\n| **Asia / South Korea**      | 13808                                                | 13808                                               | 0                        | 0 %                          |\n| **Europe / Denmark**        | 163900                                               | 163900                                              | 7                        | 0,004 %                      |\n| **Europe / Germany**        | 66374                                                | 66236                                               | 0                        | 0 %                          |\n| **Europe / Norway**         | 12264                                                | 12264                                               | 0                        | 0 %                          |\n| **Europe / Spain**          | 17991                                                | 17921                                               | 0                        | 0 %                          |\n| **Europe / United Kingdom** | 32835                                                | 30597                                               | 74                       | 0,242 %                      |\n| **North America / Canada**  | 20791                                                | 20791                                               | 0                        | 0 %                          |\n| **North America / USA**     | 75487                                                | 74971                                               | 5                        | 0,007 %                      |\n| **Oceania / Australia**     | 13267                                                | 13257                                               | 5                        | 0,038 %                      |\n\n[[Note on the unassigned|Work_documented#dealing-with-the-unassigned]]\n\n## Mapping lineages\n\n- Mapping of lineages to their parental lineage is done based on the Pangolin lineage naming string and the spike mutations:\n\n  - From the 10 files of ```Work/Data_Analysis/ten_country_mut_data``` the columns corresponding to the mutations and pango lineage were extracted and stored in a different file ```Work/Data_Analysis/ten_country_mut_data/ten_country_lineage_mut.csv```.\n  This is done using awk command\n\n```Bash\nawk -F\";\" '{gsub(/[()]/,\"\",$6);print $5\";\"$6}' \nten_country_mut_data/* \\\n>ten_country_mut_data/ten_country_lineage_mut.csv\n```\n\n  >gsub is used to remove the brackets in the AA_mutations column.<br>\n  >Columns of the CSV files are separated by a semicolon ';'\n\n- All the following steps are coded in the Rmd file ```Work/Data_Analysis/Lineage_mapping.Rmd```\n  - All the mutations pertaining to each of the lineage were combined.\n  - From this only the spike mutations were considered for the downstream work.\n  - Jaccard index (intersections of sets/Union of sets). If the Jaccard value calculated  is less than 0.5 then the lineages being compared are either considered as parental or neighbour depending on their pangolin string. [[Question on the treshold|Work_documented.possible_questions#3-the-jaccard-index-treshold-chosen-to-decide-a-parent-or-a-neighbour-is-50-is-this-okay]]\n    - The Lineages were mapped to parental lineage based on the the calculated jaccard value which is based on the number of common spike mutations between pangolin lineages that have same names dropping the last character in the sublineage. VOC/VUM/VOI were explicitely mapped based on the list taken from GISAID.\n  - For Pangolin lineages that are considered as VOI/VUM/VOC, the  mapping is directly given in GISAID. This can be found in the file ```Work/Data_Analysis/GISAID_VOI_VOC_VOM_list.txt```.\n    - This list was obtained by first downloading the Clade/Lineage,variants(tsv) from the GISAID Downloads prompt.\n    - This tsv file has multiple columns. Interesting columns were type and Value. Using the following bash commands the list of GISAID_VOI_VOC_VOMlist.txt was compiled\n\n    ```bash\n    awk -F\\t '{if($3==\"Variant\") print $4}' \\\n    gisaid_variants_statistics_from_gisaid.tsv | \\\n    sort -u >GISAID_VOI_VOC_VOM_list.txt\n    ```\n\n    - The resulting text has long lines like _**VOI GRA (EG.5+EG.5.*) first detected in Indonesia/France**_\n    from this only the variant and sublineage names EG.5+EG.5.*  are retained while other texts including the brackets are removed(manually).\n    - Lines are rearranged in such a way that parental variant comes after the subvariant, example: XBB+XBB.\\*    would come only after XBB.1.16+XBB.1.16.*. This rearrangement was done manually.\n  ![mapping lineages idea](assets/Pics/Mapping_lineage_idea.png)\n  - In total there are 1628 unique lingeages which includes variants also. Running the mapping algorithm on this gives 715 lineages mapped to 16 variants and 913 lineages getting mapped to 531 lineages which includes Unknown.\n  \n  > If muation list is obtained using the outbreakinfo function getMutationsByLineage then the results vary for the non-variant lineages. 912(without unknown) lineages gets mapped to 676 lineages. This is present in assigning_the_unassigned.RMD\n\n## Frequency computation\n  \n- After the lineage mapping, for each country the frequency of presence of each parental_lineage(which also includes the sublienages) in a month was calculated ($\\frac{count\\space of\\space lineage\\space B\\space in\\space jul}{total\\space entries\\space in\\space jul}$) with confidence interval and plotted.MultinomCI from DescTools package is used to compute the simultaneous [[Confidence interval|Glossary#confidence-interval]]. This function also calculates frequency/proportion so a seperate computation was not required.95% confidence interval with method sisonglaz was computed. The plots are stored in PDF file, 1 plot for each country so 10 pages - ```Work/Data_Analysis/plots/country_wise_frequency_trend.pdf``` without CI and ```Work/Data_Analysis/plots/country_wise_frequency_trend_CI.pdf``` with CI.\n- To make it more convenient plots for each Parental_lineage/variant grouped by country was plotted to do the analysis. These are present in the pdf files - ```Work/Data_Analysis/plots/Variant_wise_trend_all_countries.pdf``` without CI and ```Work/Data_Analysis/plots/Variant_wise_trend_all_countries_CI.pdf``` with CI\n- These plots are analysed to bring out the difference in the variant trend among countries. An entire spreedsheet was developed manually basically describing the variant trends in words ```Work/Data_Analysis/plot_Analysis_report.numbers```, and the summary of the analysis is in [[Analysing_variant_trends]] file.\n- To not miss on the difference of pandemic in countries the lineages which are not variants were also used for comparison like the variants. There are 300+ plots in the file each page corresponding to one lineage which is not a variants and the data is grouped by country. This is presetn in ```Work/Data_Analysis/plots/Lineages_no_var_freq_countrywise_CI``` with CI and in ```Work/Data_Analysis/plots/Lineages_no_var_freq_countrywise``` without CI.\n- From these plots trends that look interesting are chosen and noted in [[Analysing_variant_trends]]\n\n## Dealing with the unassigned\n\n- For few entries of the GISAID downloaded data the lineage was not assigned. The lineage column had either a blank space or it was termed as unassigned. There were in total 91 unassigned entries in the downloaded 10 country data.\n- Denmark 7 entries ,UK 74 entries, USA 5 entries, Australia 5 which is Denmark 0.004%, UK 0.242%, USA 0.007%, Australia 0.038% of the entries in the respective countries.\n- Majority of the unassigned entries were collected in Oct23\n- To get the possible assignment for these entries few methods were tried out.\n- First among them was to calculate distance between the unassigned and all other lineages based on their spike mutations. For this process the characteristics mutation for each lineage was obtained using the outbreakinfo function *__getMutationsByLineage__*. Lineages that had less distance to each of the unassigned entries were considered as possible assignment.\n- Though this method seems to work when the method was checked with entries with known assignments, the method did not perform well.\n- The main reason that this wouldn't work is beacuse not all the characteristic spike mutation is always present in the GISAID downloaded data, so when distance is computed there is always discrepencies.\n- Hence to go with an accurate method genome sequences of these unassigned entries were obtained and a fasta file was compiled.\n- This file ```unassigned_sequences.fasta``` was uploaded in the <https://pangolin.cog-uk.io> to get the assignment.\n- Once the assignment was obtained it was added to the dataset. This part is included in the fill_parental function of lineage_mapping. The trends were reanalysed after assigning the unassigned.\n  > The <https://pangolin.cog-uk.io> was not able to analyse the 5 sequences from australia. No reasons was provided.\n\n![pangolin_assignment](assets/Pics/pangolin_assignment_analysis.png)\n\n![pangolin_assignemt_details](assets/Pics/pangolin_assignment.png)\n\n- All these are present in the ```Work/Data_Analysis/assigning_the_unassigned.Rmd```\n\n## Finding positions under pressure (BIG GOAL)\n\nThe big goal is to find the positions under pressure. To obtain this, firstly the frequency of  mutation on each position of Spike RBD and NTD Epitopes are calculated. (RBD spike mutations in position 330-530, NTD(14-20,140-158,245-264) mutations)([[Question on the position|Work_documented.possible_questions#5-aaccording-to-uniprot-the-rbd-region-in-spike--is-319-541aa]]) For this the aa_substitution data obtained from GISAID was used.\n![frequency interpolation](assets/Pics/Frequency_interpolation.png)\n\n**STEPS:**\n\n- For Each country the mutation data from GISAID has been used as the input.\n- This data consist of the lineage, collected date, location of collection, a string of aa_substitution.\n- All the aa_substitution strings that are collected on the same day are considered together. This also gives the number of entries collected in a day = number sequences colleceted on a day.\n- From these strings the spike RBD, NTD epitope mutations are alone extracted using getintrmut function.\n- The data frame gets reduced to date,number of sequences,spike RBD/NTD mutations string.\n- To calculate the frequency of a mutation for a time step, all the possible unique spike RBD, NTD mutations present in the country is first compiled.\n- Then the frequency of each of this mutation for a day is calculated.\n  > Frequency of pos_373 on 01-01-2022 = $\\frac{count\\space of\\space mutations\\space in\\space pos\\_373\\space on\\space 01-01-2022}{Number\\space of\\space sequences\\space on\\space 01-01-2022}$\n- To have the frequency data for everyday from Jan 1 2022 - Oct 31 2023, linear [[interpolation|Glossary#interpolation]] is done using the approximate method. The result of the interpolation is added to the corresponding date in the country data_frame. This step is necessary to fill in the data gaps.\n  \n[[Question on interpolation|Work_documented.possible_questions#4-why-do-we-do-linear-interpolation-why-not-spline-interpolation]]\n\n## Computing the pressure on the position\n\nWith the formula (given by Prof.Max) the pressure on each position from t<sub>0</sub> to t was computed\n$\\\\ P(pos,t)=\\sum_{s=t_0}^{t}\\exp^{-k[t-s]}\\times f(pos,s) \\\\$\n\n- Where the f(pos,t) is the frequency of the position on time t.\n- $exp^{-k[t-s]}$ is the discount factor - mutation frequencies that occurred [t-s] days ago get discounted by the half life of neutralising antibodies.\n- $k\\sim \\frac{ln(2)}{45+14}$\n- By suggestion of the Prof. the vector for discount factor was first computed. For this the date range for each of the country_df was found. If the difference between the start day and the end day is 9 then [t-s] could be in the range 0-9. Hence with this as base the discount factor was computed for [t-s] ranging 0-[difference between the start day to end day in the dataframe]. All these values are stored in a vector.\n- From the start date to the end date the pressure was calculated for everday in the following manner\n- $$$\\\\\n  P(pos,d1)=\\exp^{-k[d1-d1]}\\times f(pos,d1) \\\\\n  P(pos,d2)=\\exp^{-k[d2-d1]}\\times f(pos,d1) + \\exp^{-k[d2-d2]}\\times f(pos,d2)\\\\\n  P(pos,d3)=\\exp^{-k[d3-d1]}\\times f(pos,d1) + \\exp^{-k[d3-d2]}\\times f(pos,d2)  + \\exp^{-k[d3-d3]}\\times f(pos,d3)\n  $$$\n- This was done for all the RBD, NTD positions in a country and repeated for all the 10 countries.\n- The output will have one column with the RBD and NTD positions and with columns as many as the number of days with data in the country\n  ![Pressure output](assets/Pics/Pressure_computed_india.png)\n\n## Masking\n\n- The objective of masking to find the exposed positions among the RBD, NTD spike positions.\n- To know the exposed residues the solvent accessibility of each of the residues in the spike protein were found. [[Question on solvent acessibility|Work_documented.possible_questions#6-if-a-rbd-spike-position-in-the-wildtype-is-occupied-by-a-hydrophobic-residue-and-it-is-replaced-by-hydrophilic-residue-the-solvent-accessibility-might-change-probably-due-to-the-difference-in-the-fold--in-that-case-should-we-study-these-positions-in-each-of-the-voi]]\n- To find solvent accessibility of the protein various tools were utilitsed. This can be found here[[Work_documented.Finding_surface_residues]]\n- From the output of each of the tool Spike RBD,NTD surface positions were found. This process was direct in the case of the output from GetArea and Netsurf3.0 but in the case of DSSP, relative solvent accessibility was computed from the absolute solvent accessibility in the dssp output file. Using this computed relative solvent accessibility the surface residues were found.\n  \n> The categorising treshold is set as 25% similar to Netsurf3.0. This would need advice.\n\n- The number of surface residues flagged by the 3 tools vary.\n  \n  - Dssp : 74 residues, NetSur3.0 : 123 residues, GetArea : 50 residues. All three tools flags 36 positions in common, GetArea and netsurf flags 38 common positions, dssp-getarea 48 positions in common, dssp-netsurf 54 positions in common.\n  - Dssp : 12 NTD, 62 RBD\n  - GetArea: 8 NTD, 42 RBD\n  - Netsurf: 22 NTD, 101 RBD\n- Residues flagged by each of the tools are fished from the ten country's position under pressure dataframe. The numbers are tabulated .![Methods comparison](assets/Pics/methods_comparison.png)\n\nThe positions being picked by each of the tools are compared with the positions given by Prof.Max(screenshot). The tabulation is available in ```Work/Data_Analysis/Positions_being_picked.numbers```\n\n## Visualization of the positions under pressure\n\nLike previous variant trend visualization, the pressure trend was also visualised using geom_line in two ways, positionwise and countrywise. These plots are present in ```Work/Data_Analysis/pressure_plots```. There are 6 plots - 3 countrywise, 3 positionsise. The 3 denotes the 3 masking tool outputs that were used to generate the plots.\n\n## Entropy for each positions:\n\nThe amino acid substitution on a position is not constant. Example: on position 14 mutations found in india include Spike_Q14H,Spike_Q14del,Spike_Q14R. So calculating the number of such prevailing mutations on a position is the entropy. This was calculated to weigh down the pressure on a postiion .... Not processed further yet\n\n## Neutralisation probability:\n\nFor knowing how impactful would a mutation on a site be, the probaility of neutralisation is being calculated. The Probability of neutralisation of a variant y by the antibodies elicited by variant x at time t.\n$$$\n\\\\\nP_{Neut}(t,x,y)=1-\\prod_{v\\in A_{x/y}}(1-b_v(t,x,y))\n$$$\nTo compute this probability the binding probability $b_v(t,x,y)$ of an antibody of a particular epitope class with the variant is needed.\n$$$\n\\\\\nb_v(t,x,y)=\\frac{exp^{-k[t-s]}}{FR_{x,y}(v).IC50_x(v)+exp^{-k[t-s]}}\n$$$\n\n- The discount factor is used here to represent the diminishing concentration of the antibodies elicited by variant x. $FR_{x,y}(v)$ is the fold resistance of a variant y to binding of antibodies of epitope class $(v)$ elicited by variant x [All taken from the lab's paper which is currently in review].\n- The probability of binding is computed in the same manner as the pressure. For each postion that is getting mutated, for each of the antibodies the fold resistance and IC50 that was provided was used. These values were obtained from DMS data and was used in the predecessor work of the lab.\n- To compute the binding probability the FR and IC50 of antibodies belonging to the same epitope class was averaged and then used to compute the binding probability for an epitope class.\n- The resulting dataframe has the position, epitope class, $b_v$ series(for all the days in the observation time line). Binding proability with FR=1 and FR provided in the table were used to comput two resulting dataframes.\n- With the computed two binding probability dataframes, two probability of neutralisation dataframes are computed. $P_{1_{Neut}}$ (with FR=1), $P_{2_{Neut}}$. The Probability neutralisation dataframes contains a column for the position, and other columns dedicated for all the time steps.\n- To compute the probability of neutralisation, for each position, for each time step, the binding probability of all the antibody classes for the time step are considered.\n- The weight is computed by $\\frac{P_{1_{Neut}}\\space (with FR=1)}{ P_{2_{Neut}}}$.\n- The computed weight is then multiplied with the pressure timestepwise and then the weighted pressure is plotted - Positionwise and countrywise; all the positions are considered irrespective of being exposed or burried. ```Work/Data_Analysis/pressure_plots/pos_pressure_trend_avg_wtpressure.pdf```, ```Work/Data_Analysis/pressure_plots/pressure_trend_avg_wtpressure.pdf```\n- ```Work/Data_Analysis/Big_goal.Rmd```, ```Work/Data_Analysis/neutralisation_probability.Rmd``` has all the scripts regarding the big goal.\n\n> Another method: binding probability for all the time steps for all the antibodies were computed first and then averaging these binding probability of antibodies across an antibody class was done and used to find the probability of neutralisation. The weight values did not differ drasitically to be precise there are only 116 values that differ. Just sticking to the earlier method.\n[Definition Reference](https://www.cdc.gov/coronavirus/2019-ncov/variants/variant-classifications.html)\n\n## Analysis of the weighted plot\n\n- **Overall trend across all the countries:**\n  > The plots Pictures represents the overall trend for the grouped positions\n\n  **Grouping positions by similar pressure trends**\n  \n  The similar trend positions were visualised to see if, the are very near to experience same trend of pressure.\n  \n  - 373,142,501,19,440,505,478,371,417,376,339,408,375,405,498,477, 484  ![plateau curve](assets/plots/Pressure_rep_curve_plateau.png)\n  ![first group](assets/protein_locations/first_grp.png)\n  > position 19 is missing in the structure\n\n  - 496,143,145 ![Sharp curve](assets/plots/Sharp_increase_decrease.png)\n  ![second group](assets/protein_locations/second_grp.png)\n  > position 145 is missing in the structure\n\n  - 493 the trend is like the previous but with an offset in the peak ![pos 493](assets/plots/pp_493.png)\n  ![493](assets/protein_locations/pos_493.png)\n  > This position is 8.1$\\AA$ away from pos 496\n  \n  - 446,346 ![small peak and big curve](assets/plots/small_peak_big_curve.png)\n  ![446_346](assets/protein_locations/446_346.png)\n  > pos 446 is missing in the structure\n  \n  - 157,452 ![small peak and big bump with decrease](assets/plots/small_peak_big_curve_decrease.png)\n  ![157_452](assets/protein_locations/452_157.png)\n  - 158,156 ![small peak and instability end](assets/plots/small_peak_instability_end.png)\n  ![156_156](assets/protein_locations/156_158.png)\n\n  - 144 similar to the previous but many countries have trends of high pressure at the end of the observation timeline ![pos 144](assets/plots/pp_144.png)\n > position 144 not found in the structure\n\n  - 245,153,450,18 ![sharp fluctuating peaks](assets/plots/fluctuating_peaks.png)\n  ![this one](assets/protein_locations/245_153_450_18.png)\n  > pos 18,153 are absent in the struct\n\n  - 146,445,368,252,490,460,486 ![increase only in end](assets/plots/increase_end.png)\n  ![end increase](assets/protein_locations/end_increase.png)\n  > 146, 252, 445 are absent in the structure\n  \n  - 152,147,257,356,444 ![end bump](assets/plots/bump_end.png)\n  ![end bump](assets/protein_locations/end_bump.png)\n  >152, 147, 257 are absent in the structure\n\n  - 253,521 ![end small curve](assets/plots/end_small_rise.png)\n  ![253_521](assets/protein_locations/253_521.png)\n  > pos 253 is absent in the structure\n  - 455,456 ![sharp increase](assets/plots/end_sharp_increase.png)\n  ![455_456](assets/protein_locations/455_456.png)\n\n- Visually the positions that have similar pressure trends are not always in proximity on the folded protein. Since this is a static structure, there might be dynamics which can bring these positions together but this is just an hypothesis.\n  \n- 256 high pressure is observed in only australia at the end of the observation period ![pos 256](assets/plots/pp_256.png)\n- 344,494 Germany has higher pressure than others ![pos 344](assets/plots/pp_344.png) ![pos 494](assets/plots/pp_494.png)\n- 248 India and Norway records high pressure comparing to others ![pos 248](assets/plots/pp_248.png)\n\n## Comparison of pressure trend with the variant trend\n\n- To do this the characteristic mutations of each variants were obtained using the **getMutationsByLineage** function from outbreakinfo package. From these the positions were alone taken.\n- But set of positions are not exclusive for a variant, there is major overlap. That is positions in first group belongs to the characteristics mutation of almost all the variants. So based on the mutation position pressure trend its difficult to draw a corelation with variant trend.\n- Considering mutations would be a better way to go ahead.\n- I think considering individual mutations would give allow us to visualise occurance of mutation on a position after the pressure peaks on a position\n\n## Repeating the process with Mutations\n\n- From frequency calculation to computing the weighted pressure the process was repeated again for individual mutations.\n- The visualization is slightly different. For each country there is a separate pdf. The pressure trends of mutations on the same positions are plotted together in a graph with each line representing a mutation.\n- Few trends are promising.\n- ![India promising](assets/plots/india_promising.png) This seems like at the time when the pressure trend of spike_G339O peaks - high vulnerability to be mutated the pressure trend of spike_G339H starts picking up, this corroborates the hypothesis that when the pressure increases there are higher chances for that position to be mutated.\n- ![Australia promising](assets/plots/australia_promising.png) In this case the mutant Spike_F157del has exsisted  along side of Spike_F157L. But the pressure on the former increases only after the pressure on the later peaks. This can be interpretted as the former got more favorable conditions to spread more and hence the pressure is going higher.\n- But there are trends that needs little more effort to look into ![plot1](assets/plots/plot_doubt1.png) ![plot2](assets/plots/plot_doubt2.png) ![plot3](assets/plots/plot_doubt3.png)\n  \n  ","n":0.017}}},{"i":3,"$":{"0":{"v":"Possible_questions","n":1},"1":{"v":"\n### 1. Why/How was this particular time period (Jan22-Oct23) chosen, while pandemic has been prevelant 2020 onwards?\n\n- ANS:\n\n### 2. There are continuous deposition of sequences to GISAID even for the earlier dates, the following tables shows the difference in numbers. Will calculating CI account these changes ?\n\nCountry|Number of downloaded(18-20 Nov 23)|Number in GISAID at later date(8 Dec 2023)\n-------|--------------------|------------------------------\nIndia|15783|15809\nSouth_korea|13808|13826\nDenmark|163900|163905\nGermany|66236|66244\nNorway|12264|12264\nSpain|17921|18039\nUK|30597|30606\nCanada|20791|20802\nUSA|74971|75165\naustralia|13257|13261\n\n- ANS: If there is major difference CI wouldn't account for these. In that case we have to either redownload new set of data or we have to jjust specify the date of download in the report\n  \n### 3. The jaccard index treshold chosen to decide a parent or a neighbour is 50%. Is this okay?\n\n- ANS: Jaccard index is not the right way to go about, we have to get the distance, create a distance table based on the spike mutations.\n\n### 4. Why do we do linear interpolation, why not spline interpolation?\n\n-ANS: In a sparse data using a spline interpolation might give unexpected results which might not be right.\n\n### 5. Aaccording to Uniprot the RBD region in spike  is 319-541aa ![spike rbd uniprot](assets/Pics/uniprot_spikeRBD.png)\n\nANS: There are no interesting epitopes before position 330 and after position 530 so it's fine.\n\n### 6. If a RBD spike position in the wildtype is occupied by a hydrophobic residue and it is replaced by hydrophilic residue, the solvent accessibility might change probably due to the difference in the fold.  In that case should we study these positions in each of the VOI?\n\nANS: The Mutation doesnt alter the fold to a great extent, if that happens it will affect the function of the protein, so using the wildtype to compute the solvent accessibility is not so bad idea.\n\n### 7.  The computed pressure trend for a position is obtained by calculating pressure at multiple time points. For now pressure is computed every 180 days. The time horizon is not exactly divisible into bins of 180 days. There will be difference in the final bin. Will this be a problem?","n":0.055}}},{"i":4,"$":{"0":{"v":"checking inconsistencies","n":0.707},"1":{"v":"\n- It was seen that the numbers in the ```Work/Data_Analysis/chosen_ten_country_submission.csv``` do not match to the number of downloaded entries. \n- The number of downloaded entries are always higher than the numbers in the file.\n- Month wise counts were calculated from the downloaded entries using the group_by function\n  \n```r\nmonth_numbers<-list()\nfor(i in names(ten_country_mut_data)){\n  month_numbers[[i]]<-data.frame(ten_country_mut_data[[i]] %>% \\\n  group_by(format(Collected_date,\"%Y-%m\")) %>% count())\n  colnames(month_numbers[[i]])<-c(\"Month\",\"number\")\n}\n```\n\n- The result of the above code was manually compared with the numbers in the file. Months where the deviation occured were noted.\n\n- GISAID was again queried for number of entries for one of the months for which the values deviated in South_korea data (OCT23).\n- The result of the query neighter matched with the number in the file or with the number got from the snippet. It was higher than both.\n- This it when I realised that entries from older months are uploaded to GISAID anytime. This can be seen through the submission date column in GISAID - Entries with old collection date and recent submission date.\n- So the difference between the numbers in the file and the numbers from downloaded entries could be reasoned out to be the data submitted during the time gaap between compiling the csv file and downloading the data (nearly 1 week).","n":0.07}}},{"i":5,"$":{"0":{"v":"Mapping_lineages","n":1},"1":{"v":"```{Algorithm}\nFunction mapping_lineages (lineage_cmut,alias_df)\n\n    Function chunk_lineage(lineage_cmut,alias_df)\n        \n        1.Chunks lineages and sublineages by the first character of Pangolin string. \n        One element of the input data frame is considered at an instance and all the \n        members of the clade to which it belongs are chunked and passed to the downstream \n        processing.\n\n        2. If there are no lineages having the same first \n        character but there are entries in the input df, the lineage is \n        mapped to it's own and is stored in alias_df.\n\n        3. else If the there are no more entries in the \n        lineage_cmut then the lineage is mapped to itself and  return is called.\n\n        4. else the chunk stored in temp_df is passed to\n        long_sublineage\n\n    End\n\n    Function long_sublineage(temp_df,lineage_cmut,\n    alias_df,alias_df_temp)\n\n        1. Finds the sublineage with longest character string\n        and stores it in longlineage_df\n\n        2. If multiple lineages have long character string\n        both the lineages are stored in longlineage_df\n\n        3. If linegaes length is just one then it is the\n        parental lineage and it is mapped to it's own and is\n        removed from temp_df amd is stored in alias_df\n\n    END\n\n    Function match_merge(longlineage_df,temp_df\n    lineage_cmut,alias_df,alias_df_temp)\n\n    1. Iterates through the longlineage_df, forms pattern\n    from the first element taken and tries to find\n    neighbours in longlineage_df based on jaccard value\n    using function find_jaccard\n\n        1. If neighbours are found their mutations are\n        combined (union).\n\n        2. Checks if these neighbors are paretnal lineage to\n        some other lineage in the alias_temp_df\n\n        3. Checking if there is a parental lineage to the\n        neighbours in the temp_df\n\n        4. If parental lineage is found and if the length of the parental \n        lineage string is more than one, the mutations of the\n        neighbours and the parernal lineages are again\n        combined (union) and stored in the place of \n        mutations of the parental lineage in temp_df. Neighbours are \n        mapped to their found parent and are stored in alias_df_temp, \n        since there is potential for surther mapping. This parental \n        lineage also becomes the parental lineage for the \n        sublineages that had these neighbours as parental \n        lineage in alias_df_temp.These neighbors are removed from \n        longlineage_df and the loop is iterated for the next round.\n        \n        5. Else if the length of the parental lineage is \n        equal to 1 then everything in the previous point \n        that was written in the alias_df_temp is written to\n        alias_df. Mutations are not meddled with, since it is \n        the ultimate paretnal lineage and there is no go further.\n\n        6. If no parental lineage was found then the the\n        Neighbours are mapped to the pattern which is the\n        name of the neigbors without the last character. This\n        pattern concatinated with x becomes the parental \n        lineage of the neighbors. This also becomes the \n        parental lineage for those sublineages for which the \n        nighbors were parental lineage.\n\n    2. If there are no neighbors found\n\n        1. Code directly starts finding the parental \n        lineage for the element being considered.\n\n        2. If paretnal lineage is found and the length of \n        the lineage is more than 1, the element in hand \n        is mapped to the found paretnal lineage and jaccard \n        value is stored in the alias_df_temp.  Mutations of \n        the element and the found parental lineage is combined and \n        stored in the place of the parental mutations in temp_df\n\n        3. Sublineages for which the lineage in hand is the parental\n        lineage in alias_df_temp gets mapped to the newly found parental lineage.\n\n        4. If the length of the parental lineage being \n        found is equal to one then point 2,3 is repeated \n        but difference would be that instaed of \n        alias_temp_df, alias_df is used and mutations are not meddeled with.\n\n    3. If no parerntal and neighbors were found\n\n        1. The lineage being considered is mapped to \n        itself.\n\n        2. For sublineages in the alias_df_temp that has \n        the lineage being considered as parental lineage is \n        remains the same. It is just transfered to \n        alias_df with no changes.\n\n    \n    Once the longlineage_df has been fully processed if \n    there are entries in temp_df long_sublineage is called else chunk lineage is called.\n    \n\n\n\n    END\n\nEnd\n```\n\n```{Algorithm}\nFunction find_jaccard(pat,search_df,pat_mutations=0)\n\n    search_lineage_loc<-grep(pat,search_df$lineage)\n\n    1. If pat_mutations==0 means the function is finding the\n    neighbours. Else the function is overloaded\n    to find the parental lineage.\n\n    2. If pat_mutations==0 the length(search_lineage_loc) should be\n    more than 1 - neighbours other than the lineage in hand.\n\n    3. If no neighbours were found then function returns \n    neighbours=\"0\", jaccard_value=-1,neighbour_loc=0\n\n    4. Other than point 2 the overloaded function does the\n    same functionality for both the overloaded purposes\n    and returns jaccard value, neighbours, neighbour_loc \nEnd\n```\n\n```{Find parental}\nFunction Find_parental(pat,parental_df)\n\n    1. Recursively searches with the pattern \n    until it finds the parental lineage satisfying \n    the conditions \n    2. The pattern is shortened every iteration.\nEnd\n```\n![Flowchart to explain](assets/Pics/mapping_lineages.png)\n[[question on the treshold|Work_documented.possible_questions#3-the-jaccard-index-treshold-chosen-to-decide-a-parent-or-a-neighbour-is-50-is-this-okay]]\n","n":0.036}}},{"i":6,"$":{"0":{"v":"Finding_surface_residues","n":1},"1":{"v":"\n## DSSP server\n\n[DSSP server](https://www3.cmbi.umcn.nl/xssp/)\n\n- Input : PDB file (6xlu)\n- The output contains a column names ACC. The values in this column is either number of water molecule in contact with the residue*10 or Residue's water exposed surface in $\\AA^2$.\n![DSSP_output](assets/Pics/DSSP_output.png)\n- The ouput obtained was causing problems when read through R.\n- To circumvent this, dssp was installed in the system and the protein stucture files (6xlu.pdb) was used to obtain the dssp file.\n\n```{bash}\ndssp 6xlu.pdb 6xlu.dssp\n```\n\n- This dssp file was parsed in R using the function parse.dssp from ptm package.\n\n## Get Area server\n\n[GETAREA](https://curie.utmb.edu/getarea.html)\n\n- Input: PDB file (6xlu)\n- The output contains a columns saying if the residue is inside or outside - represented as (i/o)\n![getarea_output](assets/Pics/getarea_output.png)\n- The output is displayed on the webpage\n- This output was manually copied and was converted into a csv file after doing some text editing. This way the file could be easily read in R\n\n## NetSurfP 3.0\n\n[NetSurfP 3.0](https://services.healthtech.dtu.dk/services/NetSurfP-3.0/)\n\n- Input: [FASTA sequence](https://www.uniprot.org/uniprotkb/P0DTC2/entry#sequences) is submitted\n- Output: It gives the solvent accessibility, relative solvent accessibility which based on a treshold of 25% - more than 25% the residue is exposed, less than that the residue is burried.\n![output](assets/Pics/NetsurfP3_0.png)\n- The RSA values can be taken from the csv file which could be downloaded from the result site.\n\n> Note:\n> A pariwise sequence alignment was done with the uniprot spike sequence and the sequence obtained from the 6xlu structure. ![The alignment](assets/Pics/clustal_w_alignment.png) The sequences align fairly well.","n":0.066}}},{"i":7,"$":{"0":{"v":"Glossary","n":1},"1":{"v":"## **Outliers**\n\n### **Point outlier:**\n\n- A point outlier is a datum that behaves unusual in a specific time instant when compared either to the other values in the time series (global outlier) or to its neighboring points (local outlier).[1]\n\n### **Subsequences:**\n\n- This term refers to consecutive points in time whose joint behavior is unusual, although each observation individually is not necessarily a point outlier.[1]\n\n### **Outlier Estimation and methods:**\n\n- If the outlier is obtained based on the past,current and future data then it is called the estimation method. If the outlier is obtained based on only past data then the method is prediction method.\n  \n- Some methods:\n    1. Descriptive statistics :\n        - **_Finding maximum and minimum_** in the data - for example if the the data is regarding grades of the students and the maximum possible value is 100 but due to mistake if the data has 1000 as maximum value this can be found by retrieveing the range of the data.\n        - **_Histogram_** , **_Boxplots_** of the data can be used to visualise the outlier. In Boxplots all the observations beyond the interquartile range criterion($I=[q_{0.25}-1.5.IQR;q_{0.75}+1.5.IQR]$) is considered as outlier.\n        - **_Percentiles_** All the observations that are beyond a percentile of interest is considered as outlier.\n  \n    2. Statistical tests : These tests requires the data is normally distributed. This can be checked by either visualsing the data using a histogram or using shapiro-Wilk normality test - shapiro.text().\n        - Grubb's test: The Grubbs test allows to detect whether the highest or lowest value in a dataset is an outlier.\n        - Dixon's test : Tests if a particular value is outlier or not\n        - Rosner's test: used to detect several outliers at once.\n        - **_Z-Scores_** if the data has a normal distribution. Data are categorised as outliers based on their z-score\n  \n#### **_Hampler Filter_**\n\nThis is also part of descriptive statistics. Considers values outside the interval $I=[median-3*MAD,median+3*MAD]$ as outliers. To understand MAD(median absolute deviation) ![MAD](assets/Pics/MAD.png)\n\n## Confidence interval\n\nIn general a 95% confidence interval means there is 95% probability that the confidence interval contains the mean.[2] To understand what is CI of a sample proportion, the term population proportion is defined first.\n\n> A population proportion is the proportion of individuals in a population sharing a certain trait, denoted as p. The sample proportion is the proportion of individuals in a sample sharing a certain trait, denoted ˆp.[3]\n\nJust like the estimating the CI of mean the CI of proportion is estimated by adding and subtracting margin of error from ^p to get the limits of CI.\n$$$\\\\\nMargin\\space of\\space Error\\space =z\\times\\sqrt{\\frac{\\hat p\\times(1-\\hat p)}{n}}\n$$$\nWhere z is the z-score for 95% confidence level.[4]\nFor multinomial sample prortions the confidence intervals are often approximated by single binomial confidence interval, I assume the trait of iterest is considered as $\\hat p$ while others become $(1-\\hat p)$. There are also methods to to calculate confidence interval simultaneously. One such method sisonglaz was used in the work through function MultinomCI from DescTools package.\n\n## Interpolation\n\nFinding a new datapoint based on the preexisting data point is called the interpolation. Common methods of interpolation includes linear,polynomial, spline interpolation. Linear interpolation fits a stright line between known points and uses the slope off the line to interpolate the missing data points. In both polynomial and spline interpolation polynomials are used to do the interpolation. The difference is that spline fits multiple piecewise polynomials to the subset of data to do the interpolation, on the other hand polynomial interpolation fits one polynomial to the entire data to do the interpolation.[5]\n\n[1]:<https://s-ai-f.github.io/Time-Series/outlier-detection-in-time-series.html>\n[2]:<https://www.graphpad.com/guides/prism/latest/statistics/stat_more_about_confidence_interval.htm>\n[3]:<https://faculty.etsu.edu/gardnerr/1080/stat4-3.pdf>\n[4]:<https://ecampusontario.pressbooks.pub/introstats/chapter/7-4-confidence-intervals-for-a-population-proportion/#:~:text=Similar%20to%20confidence%20intervals%20for,limits%20of%20the%20confidence%20interval.>\n[5]:<https://www.techtarget.com/whatis/definition/extrapolation-and-interpolation>","n":0.042}}},{"i":8,"$":{"0":{"v":"Appendix","n":1},"1":{"v":"\n## **Deep Mutational scanning data:**\n\n- The experiment measures the impact of a mutation on site s on its binding affinity to the antibodies elicited by a varaiant that doesnt contain mutation on the site s. \n- ","n":0.167}}},{"i":9,"$":{"0":{"v":"Analysis of the varient trend plots","n":0.408},"1":{"v":"\n\n\n## Inference that are interesting\n\n1. XBB.1.16(omicron):India sees the Spike earlier than the rest of the countries. The lowest frequency in india is higher than peaks of all other countries. ![xbb_1_16](assets/plots/XBB_1_16.png) ![xbb_1_16_ci](assets/plots/XBB_1_16_CI.png)\n\n2. XBB : India and Germany  records the high frequencies 70.92%,50% respectively, while other countries have frequnency less than 20% ![xbb](assets/plots/XBB.png) ![xbb_ci](assets/plots/XBB_CI.png)\n\n3. Norway doesn't have occurances of XBB.1.9.2,XBB.1.16 while other countries has recorded occurances.\n\n4. EG.5 is more prevalent in Norway and India for two months straight than in other countries ![EG_5](assets/plots/EG_5.png) ![EG_5_CI](assets/plots/EG_5_CI.png)\n\n5. XBB.1.9.1,EG.5 : Norway records occurances only for two months and it is highest than frequencies of other countries. No gradual increase or decrease recorded. ![xbb_1_9_1](assets/plots/XBB_1_9_1.png) ![xbbb_1_9_1_ci](assets/plots/XBB_1_9_1_CI.png)\n\n> The CI would say how true are these sudden occurances.\n\n6. XBB.1.9.1 : not present in Australia\n\n7. B.1.1.529(Omicron): The Final spike after a downhill trend during the last month of occurance(jun23) in Norway(66.66%) and Germany(16%) can be interesting. ![B_1_1_529](assets/plots/B_1_1_529.png) ![B_1_1_529_CI](assets/plots/B_1_1_529_CI.png)\n\n8.  CH.1.1: Norway records high frequencies (61%) compared to other countries. ![CH_1_1](assets/plots/CH_1_1.png) ![CH_1_1_CI](assets/plots/CH_1_1_CI.png)\n\n9. XBB.2.3:   Starts in Jan23 in India and is continuous till May23. There is a break of 3 months Jun23,Jul23,Aug23. Then there is a spike(highest frequency) in the month of Sept23-Oct23.(intereseting), while in other countries the trend is monotonous.![XBB_2_3](assets/plots/XBB_2_3.png) ![XBB_2_3_CI](assets/plots/XBB_2_3_CI.png)\n\n\n\n> ## 10. BA.2.86\n   >\n   > + Occurances only observed in Denmark, Germany,Spain,Uk,USA\n   > + Though the frequency of all the occuraces in all these countries are less than 10%, by the 95% CI Denmark records the highest frequncy (40%) of occurance in the month of Jul23.\n   > + Denmark records occurances from Jul23-Sep23, spain and UK records occurances from Sep23-Oct23. Germany,USA records occurances only in oct23 which is very low 0.9% and 0.3%  respectively.\n   \n![ba_2_86](assets/plots/BA_2_86.png)\n\n1. No records of the following variants B.1.429(Epsilon), B.1.525(Eta), B.1.526(Iota), C.37(Lambda), B.1.621(Mu), P.3(Theta), P.2(Zeta), B.1.640 in the 10 chosen countries during Jan22-Oct23.\n\n## Interesting plots of lineages not variant\n\n> All the following plots might change if the lineage mapping is done based on the characteristic mutations obtained from OutBreakInfo. Presently the mapping is based on mutations obtained from the GISAID database for each country.\n\n1. BF.7:  Peaks of Denamrk around 30% and Germany 15% are notable because no other country has recorded such frequencies for this lineage - they are less than 5%. And Norway has no trace of this lineage. ![BF_7](assets/plots/BF_7.png)\n2. HW.1: Aaustralia has highest frequency of this lineage in the month of Sept23 - above 50%, while other countries have all their frequncies below 10%. South Koreaa and USA are the other two countries which have meager occurances of this ineage other 7 countries have no trace of this lineage. ![HW_1](assets/plots/HW_1.png)\n3. XBF: Australia and Canada records highest frequency - around 30%-35% while other countries have frequencies less than 20%. Australia records long period exposure this lineage. ![XBF](assets/plots/XBF.png)\n4. XBK: Denmark records the highest occurance of this lineage in Jun23 - more than 30% while other countries record frequencies less than 10%. India has reported no cases from this lineage. ![XBK](assets/plots/XBK.png)\n5. XBC.1.6: Australia records the highest frequency which is around 30% and the occurance in Australia is for a long period May23-Oct23. Minimal occurances are  found in South korea, Canada, UK, USA. ![XBC_1_6](assets/plots/XBC_1_6.png)\n6. XBC.1.3: Australia has long season (Nov22-Oct23) of this lineage and also records the highest frequency - more than 20%. ![XBC_1_3](assets/plots/XBC_1_3.png)\n7. FL.10: Germany records the highest frequecy of 50% for a month in May23 while other countries have frequencies less than 5%. ![FL_10](/assets/plots/FL_10.png)\n8.  GE.1: India Records frequency of more than 30% in Jun23 while other countries have frequencies less than 10%. Uk has the prolonged season of this variant with minimal occurance.![GE_1](assets/plots/GE_1.png)\n9.  DV.x: Norway records the highest frequency of this lineage in Jun23 which is more than 30% while most countries record frequencies around 10%. Denmark has the longesst season of this lineage. Jan23-Oct23.![DV_x](assets/plots/DV_x.png)\n10. BL.1: India records the longest season with this lineage - Jun22-Jun23 and has the hoghest frequency in Jun23 (more than 30%). It should be noted that there are no occurances in the months Jan23-May23. ![BL.1](assets/plots/BL_1.png)\n11. BQ.1.1: Spain has the longest season of this lineage with the highest frequency going upto more than 40%. ![BQ_1_1](assets/plots/BQ_1_1.png)\n12. BR.2.1: Australia has the longest season(Jan22-Jun23) of this lineage with the highest frequency going around 40%. Feb22-Sep22 there are no occurances recorded. ![BR_2_1](assets/plots/BR_2_1.png)\n13. BY.1: Australia has the longest season with this lineage but with meager frequency. Canada has recorded the highest frequency in month Nov22 which is more than 30%. ![BY_1](assets/plots/BY_1.png)\n14. BR.1: Norway records highest frequency of this lineage which is more than 20% in the month of Sep22. ![BR_1](assets/plots/BR_1.png)\n15. GL.1: Australia records the highest frequency in Aug23 (more than 30%). ![GL_1](assets/plots/GL_1.png)\n16. EG.1.x: Germany has the highest frequency recorded 25% in Jul23. Frequencies in other countries are less than 5%. ![EG_1_x](assets/plots/EG_1_x.png)\n17. FK.1.x: Denmark records the highest frequency in May23 and South Korea has the longest season with htis lineage (May23-Oct23). ![FK_1_x](assets/plots/FK_1_x.png)\n   \n\n## Summary for Variants\n\n### B.1.1.7(alpha)\n+ This variants are observed only in 4 countries - Germany,Spain,UK,USA.\n+ There are less than 5 datapoints in each of these countries and the frequencies are very low. The range is 0.006% - 0.3%\n+ So considering not informative.\n\n### BA.2.75\n\n+ Observed in all the ten countries\n+ Except in India, in all other countries the trend starts from the mid of 2022 (jun22-Aug22) . The occurances stop around Dec22 or in the first 3 months of 2023 for  all the countries.\n+ In India the occurances start from Jan22 onwards. However the frequency is very low in the start of the year - less than 0.5%. By the 95% CI the values can be atmost around 1.9% in start of 2022. There are no data points observed for the months Feb22,Mar22.\n+ India(56.3%),Canada(53%) has recorded the highest frequency (more than 50%) of occurance in the month of Aug22\n+ Spain, Uk, Denmark has recorded constantly low frequency (less than 2.5%) in months of their existance from Aug22,jun22,jul22 respectively to Dec22. \n+ For all the countries but Spain,Denmark,UK the highest peaks are observed in the months Aug22 or Sept22.\n\n## BA.2.86\n\n+ Occurances only observed in Denmark, Germany,Spain,Uk,USA\n+ Though the frequency of all the occuraces in all these countries are less than 10%. By the 95% CI Denmark records the highest frequncy (40%) of occurance in the month of Jul23.\n+ Denmark records occurances from Jul23-Sep23, spain and UK records occurances from Sep23-Oct23. Germany,USA records occurances only in oct23 which is very low 0.9% and 0.3%  respectively.\n\n## B.1.351(Beta)\n\n+ Occurances recorded only in Germany and USA\n+ In the Month Mar22 both the countries has data points of 0.01%(Germany) and 0.02%(USA) frequency.\n+ Again in sept22 Germany has recorded a datapoint of 0.3% frequency. However by 95% CI upper limit value can go upto 6.3% in sept22\n\n## B.1.617.2(Delta)\n\n+ The occurances are recorded starting Jan22 in all the 10 countries.\n+ The trend follows a common pattern in all the countries. High in Jan22 and a drop in Feb22, followed by continuous low frequency. \n+ From the trend I suspect that this variant would have it's first apprarance in the year 2021 which is out of the observation horizon.\n+ I confirm my notion by realising this is the delta variant. \n+ USA,UK has frequency of 60%,65% in Jan22. Spain and Germany has frequency around 80% in Jan22. Canada and South_korea has frequency around 96% in Jan22. While countries Denmark,India,Australia,Norway has frequency less than 25% in Jan22.\n+ Discontinuous occurance: In south Korea and Australia there are long time periods (more than 6 months) with no occurances and then sudden occurances are noted. For example in South_korea Apr22-Oct22 there are no datapoints and from Dec22-May23 there are no occurances. In USA there are 5 continuous months of no occurance. India has 4 months of No data points. These countries have the trend extending from 2022-2023 but it has many months of no occurnaces.\n+ Spain has the longest trend with no long periods of silence. From Jan22-Feb23\n+ However apart from the high frequency in the month of Jan22, the frequency trend is quite monotonous with low numbers (less than 5%) in all the countries.\n\n## P.1(Gamma)\n\n+ Occurance recorded only in Uk and only in Apr22 with a low frequency of 0.02%\n\n## B.1.1.529(Omicron)\n\n+ Occurances start from Jan22 in all the ten countries.\n+ In all the countries around the months of Feb22-Jun22 the frequency is very high (more than 97%)\n+ On Average month from Aug22 onwards the trends are downstream in all the countries. There are some spikes during this downhill trend in South_korea(Nov22),Canada(Oct22),India(Dec22) . The Final spike during the last month of occurance(jun23) in Norway(66.66%) and Germany(16%) can be interesting.\n\n## B.1.617.1(Kappa)\n\n+ Occurance recorded only in India in the months March22-May22. \n+ Highest frequency is 1.1% in Apr22\n\n## EG.5\n\n+ Occurs in all the countries. \n+ In India and Norway the this variant has dominated occurance for 2 months. India - Jul23-Aug23 (100%), in Norway in the only two months of occurance Aug23-Sept23 records a frequency of 100%.\n+ The time line of occurance of this variant in all the countries are similar.\n+ Norway has the shortest trend Aug23-Sep23\n\n## XBB.1.16(omicron)\n\n+ There are no occurances from Norway\n+ India sees the Spike earlier than the rest of the countries. The lowest frequency in india is higher than peaks of all other countries.\n\n## XBB.1.5(omicron)\n\n+ While in most of the countries the datapoints start around Dec22-Jan23, USA sees this variant in Aug22.\n+ Peaks in the countries - India,Germany,Canada,Spain,Uk,USA are in the months Feb23-Apr23. \n+ USA records the highest frequency\n+ Norway has the shortest trend Mar23-May23.\n\n## XBB 1.9.1\n\n+ Not Present in Australia\n+ Norway has the shortest trend but highest frequency (Apr23-May23)\n+ In countries except Norway and Canada(May23-sept23) the onset of this varient is in the beginning months of 2023 (jan,feb) .\n+ In countries Denmark,Uk, Canada there is a break of continuous 2 months where there is no datapoint\n\n## XBB.1.9.2\n\n+ Not present in Norway\n+ There are discontinuous occurances but the periods of no occurance is less than or equal to 2 months.\n+ The overall frequency of the occurances in all the country is less than 10%\n\n## XBB.2.3\n\n+ Starts in jan23 in India and is continuous till May23. There is a break of 3 months Jun23,Jul23,Aug23. Then there is a spike(highest frequency) in the month of Sept23-Oct23.(intereseting)\n+ Trends of other countries are mostly monotonous.\n\n## CH.1.1\n\n+ Norway records the highest frequency(61%) while for the rest of the countries the highest recorded frequency is 32%(denmark)\n+ India has the shortest trend\n\n## XBB(omicron)\n\n+ India and Germany  records the high frequencies 70.92%,50% respectively, while other countries have frequnency less than 20%\n\n\nB.1.429(Epsilon), B.1.525(Eta), B.1.526(Iota), C.37(Lambda), B.1.621(Mu), P.3(Theta), P.2(Zeta), B.1.640 No data for these variants.\n\n\n\n","n":0.024}}}]}
